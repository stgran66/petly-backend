{
  "openapi": "3.0.3",
  "info": {
    "title": "Petly Project",
    "description": "Petly project - swagger page",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://petly-backend-backup.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Everything about user authentication"
    },
    {
      "name": "notices",
      "description": "Access to notices"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "news",
      "description": "Access to news"
    },
    {
      "name": "services",
      "description": "Access to services"
    },
    {
      "name": "healthz",
      "description": "Server health check"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "description": "Register new user",
        "requestBody": {
          "description": "Register new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Log user in",
        "description": "Log user in",
        "requestBody": {
          "description": "Log user in",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Log user out",
        "description": "Log user out",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/auth/avatars": {
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "Update user's avatar",
        "description": "Update user's avatar",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Uploaded avatar file",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/auth/update": {
      "put": {
        "tags": [
          "auth"
        ],
        "summary": "Updates user data",
        "description": "Updates user data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Register new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/notices/{category}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Gets notices by category",
        "description": "Gets notices by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "category of notices",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/notices/{noticeId}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Gets notice by id",
        "description": "Gets notice by id",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "category of notices",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Gets notices by favorite status",
        "description": "Gets notices by favorite status",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/notices/{noticeId}/favorite": {
      "post": {
        "tags": [
          "notices"
        ],
        "summary": "Adds notice to favorite",
        "description": "Adds notice to favorite",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noticeId",
            "in": "path",
            "description": "category of notices",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Returns user data",
        "description": "Returns user data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/user/pet": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Adds new user pet",
        "description": "Adds new user pet",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/user/pet/{petId}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes pet from user collection",
        "description": "Deletes pet from user collection",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "The token issued to the current user.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/api/news": {
      "get": {
        "tags": [
          "news"
        ],
        "summary": "Gets all news",
        "description": "Gets all news",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/api/services": {
      "get": {
        "tags": [
          "services"
        ],
        "summary": "Gets info about partners services",
        "description": "Gets info about partners services",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/healthz": {
      "get": {
        "tags": [
          "healthz"
        ],
        "summary": "Health check for server",
        "description": "If server is operational always gets 200",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com",
            "minLength": 10,
            "maxLength": 63,
            "format": "email",
            "pattern": "^(?!-)[a-zA-Z0-9_.-]+@[a-zA-Z0-9.-]+$"
          },
          "password": {
            "type": "string",
            "example": "qwerty123",
            "minLength": 7,
            "maxLength": 32
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "city": {
            "type": "string",
            "example": "Kyiv"
          },
          "phone": {
            "type": "string",
            "minLength": 13,
            "maxLength": 13,
            "pattern": "^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$",
            "example": "+380801112233"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          }
        },
        "required": [
          "email",
          "password",
          "name"
        ],
        "xml": {
          "name": "user"
        }
      },
      "Notice": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "breed": {
            "type": "string"
          },
          "place": {
            "type": "string"
          },
          "age": {
            "type": "string"
          },
          "price": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "sex": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "sell",
              "lost-found",
              "for-free"
            ]
          }
        },
        "xml": {
          "name": "tag"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}